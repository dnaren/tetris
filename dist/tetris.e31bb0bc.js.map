{"version":3,"sources":["index.js"],"names":["document","addEventListener","width","grid","querySelector","squares","Array","from","querySelectorAll","score","btnStart","ltetrominos","ztetrominos","otetrominos","itetrominos","ttetrominos","allTetrominos","currentColumn","draw","tetromino","column","forEach","index","classList","add","undraw","remove","moveDown","randomRotation","Math","floor","random","randomTetrominoShape","length","currentTetromino","setTimeout"],"mappings":"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","file":"tetris.e31bb0bc.js","sourceRoot":"..","sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\r\n  const width = 10;\r\n  const grid = document.querySelector('.grid');\r\n  const squares = Array.from(document.querySelectorAll('.grid div'));\r\n  const score = document.querySelector('#score');\r\n  const btnStart = document.querySelector('#btnStart');\r\n\r\n  const ltetrominos = [\r\n    [0, 1, width, width * 2],\r\n    [0, 1, 2, width + 2],\r\n    [1, width + 1, width * 2, width * 2 + 1],\r\n    [0, width, width + 1, width + 2]\r\n  ];\r\n\r\n  const ztetrominos = [\r\n    [1, 2, width, width + 1],\r\n    [0, width, width + 1, width * 2 + 1],\r\n    [1, 2, width, width + 1],\r\n    [0, width, width + 1, width * 2 + 1]\r\n  ];\r\n\r\n  const otetrominos = [\r\n    [0, 1, width, width + 1],\r\n    [0, 1, width, width + 1],\r\n    [0, 1, width, width + 1],\r\n    [0, 1, width, width + 1]\r\n  ];\r\n\r\n  const itetrominos = [\r\n    [0, width, width * 2, width * 3],\r\n    [0, 1, 2, 3],\r\n    [0, width, width * 2, width * 3],\r\n    [0, 1, 2, 3]\r\n  ];\r\n\r\n  const ttetrominos = [\r\n    [1, width, width + 1, width + 2],\r\n    [1, width + 1, width + 2, width * 2 + 1],\r\n    [0, 1, 2, width + 1],\r\n    [1, width, width + 1, width * 2 + 1],\r\n  ];\r\n\r\n  const allTetrominos = [\r\n    ltetrominos, ztetrominos, otetrominos, itetrominos, ttetrominos\r\n  ];\r\n\r\n  let currentColumn = 4;\r\n\r\n  function draw(tetromino, column) {\r\n    tetromino.forEach(index => {\r\n      squares[column + index].classList.add('tetromino');\r\n    });\r\n  }\r\n\r\n  function undraw(tetromino, column) {\r\n    tetromino.forEach(index => {\r\n      squares[column + index].classList.remove('tetromino');\r\n    });\r\n  }\r\n\r\n  function moveDown() {\r\n    let randomRotation = Math.floor(Math.random() * 4);\r\n    let randomTetrominoShape = Math.floor(Math.random() * allTetrominos.length);\r\n    let currentTetromino = allTetrominos[randomTetrominoShape][randomRotation];\r\n\r\n    draw(currentTetromino, currentColumn);\r\n    setTimeout(() => {\r\n      undraw(currentTetromino, currentColumn);\r\n    }, 500);\r\n  }\r\n\r\n  moveDown();\r\n});\r\n\r\n"]}